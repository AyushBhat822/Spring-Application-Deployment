spring.profiles.active=default
spring.application.name=1_MicroService
server.port=8000
spring.datasource.url=jdbc:mysql://localhost:3306/htd_product_two
spring.datasource.username=root
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/realms/realmOne
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=localhost

# OAuth2 Client Configuration
spring.security.oauth2.client.registration.keycloak.client-id=spring-app
spring.security.oauth2.client.registration.keycloak.client-secret=BGbAj3buzX2mGcTq4ZwrKpPvCNjcxevC
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Keycloak Provider Configuration
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8180/realms/realmOne/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8180/realms/realmOne/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8180/realms/realmOne/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8180/realms/realmOne/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8180/realms/realmOne

# prometheus metrics
management.endpoints.web.exposure.include=prometheus
management.endpoint.prometheus.enabled=true

